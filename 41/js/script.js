'use strict';

// Какое будет выведено значение: let x = 5; alert( x++ ); ?    ++++

// let x = 5;
// alert(x++);
// console.log(x);

// // Чему равно такое выражение: [] + false - null + true ? --------

// const a = [] + false - null + true;
// console.log(a);

// // Что выведет этот код: let y = 1; let x = y = 2; alert(x); ?  +++++++

// let y = 1;
// let x1 = y = 2;
// alert(x1);
// console.log(x1);

// Чему равна сумма [] + 1 + 2?       - ---------

// let i = [] + 1 + 2;
// console.log(i);

// //  Что выведет этот код: alert( '1'[0] )? -------
// alert('1'[0]);

// // Чему равно 2 && 1 && null && 0 && undefined ? ------------

// let f = 2 && 1 && null && 0 && undefined;
// console.log(f);

// // Есть ли разница между выражениями? !!( 1 && 2 ) и (1 && 2)? -------------
// // let a = 1,
// //   b = 1;

// // let k = !!(a && b) == (a && b);
// // console.log(k);


// //Что выведет этот код: alert( null || 2 && 3 || 4 ); ? --------

// // alert(null || 2 && 3 || 4);


// //a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b ? ++++++


// let a = [1, 2, 3],
//   b = [1, 2, 3];

// do (a == b)
// while (a == b) {
//   console.log('done');
// }

// //Что выведет этот код: alert( +'Infinity' ); ? ++++
// alert(+'Infinity')
// console.log(typeof (+'infinity'));

// // Верно ли сравнение: "Ёжик" > "яблоко"? -------

// console.log(typeof ("Ёжик" > "яблоко"));

// // Чему равно 0 || &quot;&quot; || 2 || undefined || true || falsе ? ++++
// let y = 0 || "" || 2 || undefined || true || falsе;
// console.log(y);


// let x = 5; alert(x++);
// [] + false - null + true;
// console.log(typeof ([] + false - null + true));  // number;
// console.log([] + false - null + true);  // number; //NaN
// let y = 1,
//   x = y = 2;
// alert(x);    // 2 поочередное присваивание

// console.log(+[] + 1 + 2); //выведет 3 потому что плюс перед пустым массивом преобразовывает его из строки в числовое значение

// console.log([] + 1 + 2); // выведет "12", потому что пустой массив приравнивается к пустой строке (ОСОБЕННОСТЬ ПУСТОГО МАССИВА ([] == "") ЗАПОМНИТЬ!!!!! )

// alert('1'[0]); // выведется '1' ,потому что к эллементам строки можно так-же обратиться по индексу элемента строки .В данном примере "1"[0] обратится к 1.
// alert("452"[1]); // выведется 5 потмоу что счет эллементов начинается с 0.

// console.log(2 && 1 && null && 0 && undefined); // Оператор &&(и) запинается на лживом условии ,и сразу прекращает на нем свою работу .В данном примере вернется первая ложь ,а именно null.
// // Аналогичная ситуация с оператором ||(или). Он в свою очередь запинается на первом правдивом аргументе и прекращает свою работу. Если расматривать на примере выше , он прекратил бы свою работу на 2 .

// console.log(!!(1 && 2) === (1 && 2)); // Два знака восклицания (!!) преобразовывают данные в булиновый (Boolean) тип данных . Из-за чего данное выражение не совпадет так как !!(1&&2) это булиновый тип данных ,а (1 && 2 ) числовой.
// alert(null || 2 && 3 || 4); // Оператор И (&&) имеет более высокий приоритет и выполняется в первую очередь , отдавая нам значение 3 в данном примере. Затем идет оператор ИЛИ(||), он в свою очеред заинается на правде (в данном примере на 3 ). После идет сравнение 3 || 4 , но т.к оператор || запинается на первом правдивом условии он вернет именного его (в данном примере 3 )

// const a = [1, 2, 3];
// const b = [1, 2, 3];
// console.log(a == b);

// В даном примере нужно помнить ,что два массива хранят иднтичные данные ,они также являются индивидуальными переменными с хранилищем информации.
// Даже если они похожи ,они не являются равными друг другу


// alert(+'infinity'); // В данном примере присутствует унарный плюс ,который преобразовывает тип данных в числовой +"infinity" будет отдавать не строчное значение ,а числовое за счет унарного плюса перед строкой .

// console.log('Ёжик' > 'яблоко'); // Полная хуйня

// console.log(0 || "" || 2 || undefined || true || false);
//Опять же оператор ИЛИ(||) запинается на первой правде в выражении и в данном примере отдаст значение 2 и остановит последующие действия .

// let a = 5
// // console.log(a == 7 ? true : false);
// let b = --a;
// console.log(a);
// console.log(b);


console.log(25 / 5);


const hyiatina = {
  name: 'zalupa',
  // chota: {
  //   name: 'chli`apa'
  // }
}

console.log(hyiatina.chota?.name);
